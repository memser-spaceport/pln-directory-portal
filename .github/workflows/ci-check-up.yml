name: 'CI Check-up'

on:
  pull_request:

jobs:
  main:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive base and head SHAs required for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      # - name: Match PostgreSQL client version with the server's (v13)
      #   run: |
      #     sudo apt-get update && sudo apt-get -y install wget ca-certificates apt-transport-https gnupg
      #     sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main 13" > /etc/apt/sources.list.d/pgdg.list'
      #     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      #     sudo apt-get -y remove postgres*
      #     sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get -y install postgresql-13

      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Generate Prisma Client
        run: npx prisma generate --schema=./apps/web-api/prisma/schema.prisma

      - name: Run linter for NX-specific workspace files
        run: npx nx workspace-lint

      - name: Check code format
        run: npx nx format:check

      - name: Run linter for affected apps/libraries
        run: npx nx affected --target=lint --parallel=3

      - name: Run tests for affected apps/libraries
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage
        env:
          DATABASE_URL: 'postgresql://root:postgres@localhost:5432/test'
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          FILE_ENCRYPTION_SALT: '${{ secrets.FILE_ENCRYPTION_SALT }}'
