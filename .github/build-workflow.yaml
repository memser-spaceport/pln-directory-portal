name: "workflow"

on:
 push:
   branches:
   - develop

env:
    GITHUB_SHA: ${{ github.sha }}
    
jobs:
  Build_job1:
    # cd:
      name: "Image Build"
      runs-on: "ubuntu-latest"
      if: startsWith(github.ref, 'refs/')
      steps:
        - name: "Checkout Code"
          uses: "actions/checkout@v2"
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1
    
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Auth service Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ secrets.DIRECTORY_ECR_REPO }}
            ECR_REPOSITORY: pln-directory-service
          run: |
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$git_hash .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$git_hash
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$git_hash"

  Deploy_job:
    # cd:
      name: "ecs-deployment"
      runs-on: ubuntu-latest
      needs: Build_job1
      steps:
        - name: Checkout the repository to the runner
          uses: actions/checkout@v2
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1
        - name: Setup Terraform with specified version on the runner
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.3.0
        - name: Terraform for init, plan & apply
          working-directory: Infra/ecs-deployment
          id: eks-cluster
          env:
            TG_ARN: ${{ secrets.DEV_DIRECTORY_TGARN }}
            ECR_REGISTRY: ${{ secrets.DIRECTORY_ECR_REPO }}
            ECR_REPOSITORY: pln-directory-service
          run: |
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            terraform init
            echo "$git_hash"
            terraform plan -var="imageversion=$git_hash" -var="container_target_group_arn=$TG_ARN" -var="ecr_url=$ECR_REGISTRY/$ECR_REPOSITORY" -var-file=var.tfvars
            terraform apply -var="imageversion=$git_hash" -var="container_target_group_arn=$TG_ARN" -var="ecr_url=$ECR_REGISTRY/$ECR_REPOSITORY" -var-file=var.tfvars --auto-approve