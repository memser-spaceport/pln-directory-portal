services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT}:3000'
    env_file:
      - .env
    depends_on:
      - postgres
      - oso_postgres
      - redis
      - redis-cache
      - redis-queue
      - mongodb
    networks:
      - pl-directory-backend

  postgres:
    image: postgres:13.8
    ports:
      - '${DB_HOST_PORT}:5432'
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - pl-directory-backend

  #OSO Postgres database
  oso_postgres:
    image: postgres:13.8
    ports:
      - '${OSO_DB_HOST_PORT}:5432'
    restart: always
    environment:
      POSTGRES_DB: ${OSO_DB_NAME}
      POSTGRES_USER: ${OSO_DB_USER}
      POSTGRES_PASSWORD: ${OSO_DB_PASSWORD}
    volumes:
      - oso_db_data:/var/lib/postgresql/data
    networks:
      - pl-directory-backend

  redis:
    image: redis:7.0.5
    restart: always
    ports:
      - '6379:6379'
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - redis:/data
    networks:
      - pl-directory-backend

  redis-cache:
    image: redis:7.0.5
    restart: always
    ports:
      - '6359:6379'
    volumes:
      - redis_cache_data:/data
    networks:
      - pl-directory-backend

  redis-queue:
    image: redis:7.0.5
    restart: always
    ports:
      - '6399:6379'
    volumes:
      - redis_queue_data:/data
    networks:
      - pl-directory-backend

  mongodb:
    image: mongo:5.0
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    volumes:
      - mongodb_data:/data/db
    networks:
      - pl-directory-backend

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_container
    restart: always
    ports:
      - "6333:6333"
    volumes:
      - qdrant-storage:/qdrant/storage
    networks:
      - pl-directory-backend

volumes:
  db_data:
  oso_db_data:
  redis:
    driver: local
  redis_cache_data:
    driver: local
  redis_queue_data:
    driver: local
  mongodb_data:
    driver: local
  qdrant-storage:
    driver: local

networks:
  pl-directory-backend:
    driver: bridge
